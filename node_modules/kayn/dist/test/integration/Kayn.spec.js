'use strict';

var _chai = require('chai');

var _Kayn = require('../../lib/Kayn');

describe('Kayn', function () {
    this.timeout(0);

    describe('Caching', function () {
        it('BasicJSCache', function () {
            const kayn = (0, _Kayn.Kayn)('1234')({
                cacheOptions: {
                    cache: new _Kayn.BasicJSCache()
                }
            });
            kayn.config.cacheOptions.cache.set({ key: 'cache-test', ttl: 5 }, { foo: 'bar' });
            kayn.config.cacheOptions.cache.get({ key: 'cache-test' }, function (err, data) {
                (0, _chai.expect)(err).to.be.null;
                (0, _chai.expect)(data).to.not.be.null;
                (0, _chai.expect)(data).to.deep.equal({ foo: 'bar' });

                kayn.flushCache();
                (0, _chai.expect)(kayn.config.cacheOptions.cache.cache).to.deep.equal({});
                kayn.config.cacheOptions.cache.get({ key: 'cache-test' }, function (err, data) {
                    (0, _chai.expect)(err).to.not.be.null;
                    (0, _chai.expect)(data).to.be.null;
                });
            });
        });

        it('RedisCache', function (done) {
            const kayn = (0, _Kayn.Kayn)('1234')({
                cacheOptions: {
                    cache: new _Kayn.RedisCache()
                }
            });
            kayn.config.cacheOptions.cache.set({ key: 'cache-test', ttl: 5 }, { foo: 'bar' });
            kayn.config.cacheOptions.cache.get({ key: 'cache-test' }, function (err, data) {
                (0, _chai.expect)(err).to.be.null;
                (0, _chai.expect)(data).to.not.be.null;
                (0, _chai.expect)(data).to.deep.equal({ foo: 'bar' });

                kayn.flushCache(function (err, succeeded) {
                    (0, _chai.expect)(err).to.be.null;
                    (0, _chai.expect)(succeeded).to.equal('OK');
                    done();
                });
            });
        });
    });
});
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _riotRatelimiter = require('riot-ratelimiter');

var _riotRatelimiter2 = _interopRequireDefault(_riotRatelimiter);

var _lodash = require('lodash.merge');

var _lodash2 = _interopRequireDefault(_lodash);

var _Logger = require('./Logger');

var _Logger2 = _interopRequireDefault(_Logger);

var _ParameterHelper = require('./Utils/ParameterHelper');

var _ParameterHelper2 = _interopRequireDefault(_ParameterHelper);

var _Errors = require('./Errors');

var _Errors2 = _interopRequireDefault(_Errors);

var _ChallengerEndpoint = require('./Endpoints/LeagueEndpoint/ChallengerEndpoint');

var _ChallengerEndpoint2 = _interopRequireDefault(_ChallengerEndpoint);

var _ChampionEndpoint = require('./Endpoints/ChampionEndpoint');

var _ChampionEndpoint2 = _interopRequireDefault(_ChampionEndpoint);

var _ChampionMasteryEndpoint = require('./Endpoints/ChampionMasteryEndpoint');

var _ChampionMasteryEndpoint2 = _interopRequireDefault(_ChampionMasteryEndpoint);

var _CurrentGameEndpoint = require('./Endpoints/SpectatorEndpoint/CurrentGameEndpoint');

var _CurrentGameEndpoint2 = _interopRequireDefault(_CurrentGameEndpoint);

var _FeaturedGamesEndpoint = require('./Endpoints/SpectatorEndpoint/FeaturedGamesEndpoint');

var _FeaturedGamesEndpoint2 = _interopRequireDefault(_FeaturedGamesEndpoint);

var _LeagueEndpoint = require('./Endpoints/LeagueEndpoint/LeagueEndpoint');

var _LeagueEndpoint2 = _interopRequireDefault(_LeagueEndpoint);

var _LeaguePositionsEndpoint = require('./Endpoints/LeagueEndpoint/LeaguePositionsEndpoint');

var _LeaguePositionsEndpoint2 = _interopRequireDefault(_LeaguePositionsEndpoint);

var _LeaguesEndpoint = require('./Endpoints/LeagueEndpoint/LeaguesEndpoint');

var _LeaguesEndpoint2 = _interopRequireDefault(_LeaguesEndpoint);

var _MasterEndpoint = require('./Endpoints/LeagueEndpoint/MasterEndpoint');

var _MasterEndpoint2 = _interopRequireDefault(_MasterEndpoint);

var _MatchEndpoint = require('./Endpoints/MatchEndpoint/MatchEndpoint');

var _MatchEndpoint2 = _interopRequireDefault(_MatchEndpoint);

var _MatchlistEndpoint = require('./Endpoints/MatchEndpoint/MatchlistEndpoint');

var _MatchlistEndpoint2 = _interopRequireDefault(_MatchlistEndpoint);

var _StaticChampionEndpoint = require('./Endpoints/StaticEndpoints/StaticChampionEndpoint');

var _StaticChampionEndpoint2 = _interopRequireDefault(_StaticChampionEndpoint);

var _StaticItemEndpoint = require('./Endpoints/StaticEndpoints/StaticItemEndpoint');

var _StaticItemEndpoint2 = _interopRequireDefault(_StaticItemEndpoint);

var _StaticLanguageStringsEndpoint = require('./Endpoints/StaticEndpoints/StaticLanguageStringsEndpoint');

var _StaticLanguageStringsEndpoint2 = _interopRequireDefault(_StaticLanguageStringsEndpoint);

var _StaticLanguageEndpoint = require('./Endpoints/StaticEndpoints/StaticLanguageEndpoint');

var _StaticLanguageEndpoint2 = _interopRequireDefault(_StaticLanguageEndpoint);

var _StaticMapEndpoint = require('./Endpoints/StaticEndpoints/StaticMapEndpoint');

var _StaticMapEndpoint2 = _interopRequireDefault(_StaticMapEndpoint);

var _StaticMasteryEndpoint = require('./Endpoints/StaticEndpoints/StaticMasteryEndpoint');

var _StaticMasteryEndpoint2 = _interopRequireDefault(_StaticMasteryEndpoint);

var _StaticProfileIconEndpoint = require('./Endpoints/StaticEndpoints/StaticProfileIconEndpoint');

var _StaticProfileIconEndpoint2 = _interopRequireDefault(_StaticProfileIconEndpoint);

var _StaticRealmEndpoint = require('./Endpoints/StaticEndpoints/StaticRealmEndpoint');

var _StaticRealmEndpoint2 = _interopRequireDefault(_StaticRealmEndpoint);

var _StaticRuneEndpoint = require('./Endpoints/StaticEndpoints/StaticRuneEndpoint');

var _StaticRuneEndpoint2 = _interopRequireDefault(_StaticRuneEndpoint);

var _StaticSummonerSpellEndpoint = require('./Endpoints/StaticEndpoints/StaticSummonerSpellEndpoint.js');

var _StaticSummonerSpellEndpoint2 = _interopRequireDefault(_StaticSummonerSpellEndpoint);

var _StaticVersionEndpoint = require('./Endpoints/StaticEndpoints/StaticVersionEndpoint');

var _StaticVersionEndpoint2 = _interopRequireDefault(_StaticVersionEndpoint);

var _StatusEndpoint = require('./Endpoints/StatusEndpoint');

var _StatusEndpoint2 = _interopRequireDefault(_StatusEndpoint);

var _SummonerEndpoint = require('./Endpoints/SummonerEndpoint');

var _SummonerEndpoint2 = _interopRequireDefault(_SummonerEndpoint);

var _ThirdPartyCodeEndpoint = require('./Endpoints/ThirdPartyCodeEndpoint');

var _ThirdPartyCodeEndpoint2 = _interopRequireDefault(_ThirdPartyCodeEndpoint);

var _KaynConfig = require('./KaynConfig');

var _regions = require('./Enums/regions');

var _regions2 = _interopRequireDefault(_regions);

var _methodNames = require('./Enums/method-names');

var _methodNames2 = _interopRequireDefault(_methodNames);

var _BasicJSCache = require('./Caches/BasicJSCache');

var _BasicJSCache2 = _interopRequireDefault(_BasicJSCache);

var _RedisCache = require('./Caches/RedisCache');

var _RedisCache2 = _interopRequireDefault(_RedisCache);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('dotenv').config();

const RRLStrategies = require('riot-ratelimiter/dist/RateLimiter').STRATEGY;

class Kayn {
    constructor(key = process.env.RIOT_LOL_API_KEY, config = _KaynConfig.DEFAULT_KAYN_CONFIG) {
        if (!_ParameterHelper2.default.isKeyValid(key)) {
            throw new Error('Failed to initialize Kayn! API key is not a string.');
        }

        // Make sure that the rest of the sane, nested defaults are set.
        this.config = (0, _KaynConfig.KAYN_CONFIG_STRUCT)((0, _lodash2.default)(_KaynConfig.DEFAULT_KAYN_CONFIG, _extends({ key }, config)));

        const strategy = this.config.requestOptions.burst ? RRLStrategies.BURST : RRLStrategies.SPREAD;

        this.limiter = new _riotRatelimiter2.default({
            strategy
        });

        if (this.config.debugOptions.isEnabled) {
            // Not pure but whatever.
            (0, _Logger2.default)(this.config);
        }

        // Set up interfaces.
        this.Challenger = new _ChallengerEndpoint2.default(this.config, this.limiter);
        this.Champion = new _ChampionEndpoint2.default(this.config, this.limiter);
        this.ChampionMastery = new _ChampionMasteryEndpoint2.default(this.config, this.limiter);
        this.CurrentGame = new _CurrentGameEndpoint2.default(this.config, this.limiter);
        this.FeaturedGames = new _FeaturedGamesEndpoint2.default(this.config, this.limiter);
        this.League = new _LeagueEndpoint2.default(this.config, this.limiter);
        this.LeaguePositions = new _LeaguePositionsEndpoint2.default(this.config, this.limiter);
        this.Leagues = new _LeaguesEndpoint2.default(this.config, this.limiter);
        this.Master = new _MasterEndpoint2.default(this.config, this.limiter);
        this.Match = new _MatchEndpoint2.default(this.config, this.limiter);
        this.Matchlist = new _MatchlistEndpoint2.default(this.config, this.limiter);
        this.Static = {
            Champion: new _StaticChampionEndpoint2.default(this.config, this.limiter),
            Item: new _StaticItemEndpoint2.default(this.config, this.limiter),
            LanguageString: new _StaticLanguageStringsEndpoint2.default(this.config, this.limiter),
            Language: new _StaticLanguageEndpoint2.default(this.config, this.limiter),
            Map: new _StaticMapEndpoint2.default(this.config, this.limiter),
            Mastery: new _StaticMasteryEndpoint2.default(this.config, this.limiter),
            ProfileIcon: new _StaticProfileIconEndpoint2.default(this.config, this.limiter),
            Realm: new _StaticRealmEndpoint2.default(this.config, this.limiter),
            Rune: new _StaticRuneEndpoint2.default(this.config, this.limiter),
            SummonerSpell: new _StaticSummonerSpellEndpoint2.default(this.config, this.limiter),
            Version: new _StaticVersionEndpoint2.default(this.config, this.limiter)
        };
        this.Summoner = new _SummonerEndpoint2.default(this.config, this.limiter);
        this.Status = new _StatusEndpoint2.default(this.config, this.limiter);
        this.ThirdPartyCode = new _ThirdPartyCodeEndpoint2.default(this.config, this.limiter);

        if (this.config.debugOptions.isEnabled) {
            this.config.debugOptions.loggers.initLogger('Initialized interfaces. Ready!');
        }
    }

    flushCache(cb) {
        return new Promise((resolve, reject) => {
            if (!cb) {
                cb = (err, data) => err ? reject(err) : resolve(data);
            }
            this.config.cacheOptions.cache.flushCache(cb);
        });
    }
}

const init = key => config => new Kayn(key, config);

module.exports = {
    Kayn: init,
    REGIONS: _regions2.default,
    METHOD_NAMES: _methodNames2.default,
    BasicJSCache: _BasicJSCache2.default,
    RedisCache: _RedisCache2.default
};